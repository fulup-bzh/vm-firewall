# -----------------------------------------------------------------
# Object: Firewall for "Fridu within a Xen" architecture
# Target: Provide firewall per zone with private NAT for each zone
# Author: Fulup Ar Foll (inspired from OpenWRT and SuSEfirewall2)
# Bugs:   Parsing is stupid check config before going to production.
#         Label MUST be 100% ALPHA-NUM no even basic special -,:,*,...
# Doc:    http://www.fridu.org/content/view/50/80/
# Syntax: Fridu-aXen-firewall.script command [option1=xxx ... option%%=yyy]
#         commands: start(apply rules), stop(open your machine) display(check config) 
# Options:dump=filename(dump iptables rules) dummy=1(does not apply rules)
#         config=filename verbose=1, debug=1
# Example Fridu-aXen-firewall.script start config=/etc/fw/myfw.conf dummy=1 dump=/tmp/myfw.dump
#         (this command will dump iptable in /tmp/myfw.dump but not apply them)
#
# ============= Two Zones Two, Internet IP, One Nic =================
#
#    ----- Internet --- simulation 10.10.11.0 ---------------
#              |                               |
#    Your ISP FIX Internet IP          Your Test Machine
#       (eth0   10.10.11.5)               (10.10.11.6)
#       (eth0:1 10.10.11.6)
#              |
#              -------------------------
#         (zone-A)                  (Zone-B)
#    xen-br0(10.0.12.1)        xen-br1(10.10.13.1)1
#    +-------------+           +------------------+
#    |             |           |                  |
# 10.10.12.4    10.10.12.5  10.10.13.2        Other VM
# Xen-ZA-One     Xen-ZA-Two  Xen-ZA-One
#
#  This sample is designed for test only, and simulate Internet
#  on your local network. It does not integrated VPN
#  and admin is done true basic ssh dnat port dnating.
#  Each VM can obvisouly accessing Internet. For Admin:
#     ssh -p  22 root@dom0  (connect dom0)
#     ssh -p  23 root@dom0  (connect Xen-ZA-One)
#     ssh -p  24 root@dom0  (connect Xen-ZA-Two)
#     ssh -p 222 root@dom0 (connect Xen-ZB-one) 
#
# Exercise: (few things you should test, before moving to next level)
#   1) connect on XEN-one through SSH from 10.10.10.6
#   2) open FTP on DOM0 and make it accessible from every VM but not from Internet
#   3) make outgoing packet from zone one to appear as comming from 10.10.11.5
#      while packet from zone2 appear as 10.10.11.6
#   4) prevent/allow both zones to talk together 
#   etc ....
# Note: This model is the one you MUST use is you have one than
# one external IP address. For real production you probably want
# a VPN (see vpn sample)
#================================================================

# Zones definition 
# -----------------
  # Fridu zones define a group of VM that share the same security level.
  # A zone can be map on an external NIC/IP which mean any application
  # running within such a zone will be viewed from the outside with
  # this given public adress, this independendtly of its real virtual
  # local Xen adress. By default and outside of "tuneZone" rules zones
  # deny anythin in and allow anything out. Technically a zone is a set
  # of Xen VM attached a the same network Bridge. Note that zones define
  # a security level and not a NIC/IP, that's why a NIC/IP external addr
  # can be shared by more than one zone, on the same path some zone can
  # also be fully internal and only visible from the admin network 
  # (ex: admin zone for backup, dns, ...)
  #
CreateZone NAME=ZA NIC=eth0 EXT=10.10.11.5 BR=xen-br0 INT=10.10.12.1 MASK=255.255.255.0 
CreateZone NAME=ZB NIC=eth0 EXT=10.10.11.6 BR=xen-br1 INT=10.10.13.1 MASK=255.255.255.0 

# Application Port & Forwarding (default ACCEPT = none)
# ------------------------------------------------------
  # Application defined external visibility of a given zone
  # as by default Zone deny any input those rules are mandatoty.
  # Technically CreateApp rules provide:
  #   - input rules to autorize packets to come from the
  #     external NIC/IP attached to the zone.
  #   - a dnat (destination nat) to forward input packet to
  #     the internal Xen-VM (Internal IP + Port)
  #   - a nat for outgoing packet to make sure any external
  #     user receive application packet from the right IP addr.
  # 
  # Syntax: NAME=LABEL (interface)ZONE=Zone (internet)EXT=proto:port \
  #                    (destination)INT=IP:port(user zone)|nic(none zone)
  # Warning:Label must be globaly unique. Zone 'none' is builting and point to Dom-0
  #
CreateApp  NAME=DOM0_SSH  ZONE=none  EXT=tcp:22    INT=eth0 ;# special builtin for Dom0
CreateApp  NAME=VMA1_SSH  ZONE=ZA    EXT=tcp:23    INT=10.10.12.4:22
CreateApp  NAME=VMA2_SSH  ZONE=ZA    EXT=tcp:24    INT=10.10.12.5:22
CreateApp  NAME=VMB1_SSH  ZONE=ZB    EXT=tcp:222   INT=10.10.13.2:22


